# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job: ubuntu_20_04
    displayName: 'Build - Ubuntu 20.04'
    continueOnError: false
    pool:
      vmImage: 'ubuntu-20.04'
    workspace:
      clean: all
    steps:
      - script: |
          ./build-mbedtls.sh
        workingDirectory: utility/install-deps
        displayName: 'build MbedTLS'
      - script: |
          mkdir build
      - script: |
          git clone https://github.com/oatpp/oatpp
          mkdir -p oatpp/build
        displayName: 'Checkout - oatpp'
        workingDirectory: build
      - script: |
          cmake -DOATPP_BUILD_TESTS=OFF ..
          sudo make install
        displayName: 'Build - oatpp'
        workingDirectory: build/oatpp/build
      - script: |
          cmake -DMBEDTLS_ROOT_DIR=utility/install-deps/tmp/mbedtls-build ..
          make
        displayName: 'Build - module'
        workingDirectory: build
      - script: |
          make test ARGS="-V"
        displayName: 'Test'
        workingDirectory: build

  - job: macOS
    displayName: 'Build - macOS'
    continueOnError: false
    pool:
      vmImage: 'macOS-10.14'
    workspace:
      clean: all
    steps:
      - script: |
          ./build-mbedtls.sh
        workingDirectory: utility/install-deps
        displayName: 'build MbedTLS'
      - script: |
          mkdir build
      - script: |
          git clone https://github.com/oatpp/oatpp
          mkdir -p oatpp/build
        displayName: 'Checkout - oatpp'
        workingDirectory: build
      - script: |
          cmake -DOATPP_BUILD_TESTS=OFF ..
          sudo make install
        displayName: 'Build - oatpp'
        workingDirectory: build/oatpp/build
      - script: |
          cmake -DMBEDTLS_ROOT_DIR=utility/install-deps/tmp/mbedtls-build ..
          make
        displayName: 'Build - module'
        workingDirectory: build
      - script: |
          make test ARGS="-V"
        displayName: 'Test'
        workingDirectory: build

